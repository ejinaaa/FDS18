@import url(//spoqa.github.io/spoqa-han-sans/css/SpoqaHanSans-kr.css);
@import url(https://necolas.github.io/normalize.css/8.0.1/normalize.css);
@import url(./fontello.css);
/* 숨김 제목 및 숨김 콘텐츠 */
.a11y-hidden, legend{
  position: absolute; /* 화면의 영역을 차지않게 하기위해 독립된 블록으로 만들어 띄워줌. 하지만 BFC 요소로 바뀌어 버리게 되어 스크린리더가 텍스트를 읽을 때 끊어 읽어줄 수 있기 때문에 좋은 방법은아닐 수 있음. */
  width: 1px;
  height: 1px;
  margin: 0;/* 태그에 숨김콘텐츠에 기본 마진값이 있을 수 있으므로 초기화시켜줌*/
  overflow: hidden;
  clip: rect(0 0 0 0);
  clip: rect(0, 0, 0, 0);/*clip-path속성이 IE에서 안먹을 수도 있기때문에 clip속성을 넣는데, 구형브라우저는 컴마를 인식하지 못하므로 컴마가 붙은 rect 함수를 한 번 더 넣어줌. 컴마붙은 rect함수가 밑에 오게 작성.*/clip-path: polygon(0 0, 0 0, 0 0); /*clip-path의 polygon함수를 이용해 픽셀의 path를 0값으로 바꿔 1px의 너비를 없애 눈에는 보이지 않지만 그 자리에 존재하게 만듬. x y 순으로 값이 들어감.*/
  /* top/left: -9999px;를 줘서 offset을 조정하거나 text-indent: -9999px;로 밀어버리면 키보드 탭키를 이용해 웹을 이용하는 사용자에겐 순차적으로 요소들을 읽어내려가다가 이 클래스 위치에서 갑자기 상단이나 왼쪽으로 이동하는 현상이 있을 수 있으므로 접근성에서 좋지 않음. */
  /* opacity: 0; 예전엔 모바일에서 이슈가 있었지만 현재는 가능한 것 같음. */
  /* font-size: 0; 요소가 없어지는 개념이므로 사용할 수 없음. */
  
}
body *, body *::before, body *::after {
  box-sizing: border-box;
} /* 어느 요소에나 패딩이나 보더값을 주어도 정해놓은 사이즈는 바뀌지 않도록 설정. html의 모든 가 아닌 body안의 있는 모든 요소들를 선택해 불필요하게 속성이 들어가 성능이 나빠지지 않도록함. */

html {
  font-size: 10px; /* root가 되는 html에만 폰트값을 px로 지정하고 자식요소들은 rem단위를 사용해 전체 폰트 사이즈 수정 시 용이하게 만들어줌. */
}
body {
  font-family: 'Spoqa Han Sans', 'Sans-serif'; /* 오른쪽 값은 글꼴 군(genery family)을 말함. 해당 폰트가 에러등으로 인해 표시를 못할 경우 로컬의 해당 글꼴군의 폰트 패밀리로 보여줌.*/
  font-size: 1.4rem;
  color: #181818;
  background: #ccc;
}
/* 링크 스타일 */
a {
  color: inherit; /* inherit값으로 부모의 값을 상속 받음. 부모의 속성값만 변경해 자식까지 동일한 상속값으로 변경됨. */
  text-decoration: none;
}
ul, li {
  list-style: none;
}
/* 모던 브라우저 정렬 방법 display:flex; */
/* body {
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
} */
/* 스킵 내비게이션 */
.skip-nav {
  display: none; /*영구적인 none일 때는 사용하면 안됨*/
}

/* 레이아웃 */
.header,
.visual,
.main,
.slogan {
  width: 940px;
  margin: 0 auto;
}
/* 헤더 */
.header {
  background: #fff;
  position: relative; /* relative는 normal flow이면서 위치를 잡아줌. */
  border-radius: 0 0 15px 15px; /* x축과 y축을 나눠서 사용시 border-radius: x1 x2 x3 x4/y1 y2 y3 y4;로 설정 가능. */
  padding: 0 30px;
}
/* 로고 */
.logo {
  position: absolute; /* position의 기본값인 static값을 뺀 나머지의 position값을 가진 부모를 기준으로 위치를 잡음. 기준이 position이 부여되지 않은 root가 되지 않도록 position:relative;를 기준이 될 요소에 꼭 찍어주는 것이 좋음. */
  top: 50px;
  left: 65px;
  margin: 0;/*<h> 기본 마진값이 있으므로 초기화시켜줌*/
}
/* 안내 링크 목록 */
.member {
  margin: 0; /*<ul>기본 마진값이 있으므로 초기화.*/
  padding-left: 0;
  list-style: none;
  text-align: right; /* 텍스트 정렬 속성이지만 인라인요소들을 정렬하는데도 사용 가능. 적용 시 .member li가 display:inline-block; 설정이 되어있기 때문에 오른쪽으로 정렬이됨.*/
}
.member li {
  display: inline-block;
  padding: 2px 0;
}
.member li a {  
  padding: 6px 0;
  display: inline-block;
}
/* 내비게이션 */
.navigation {
  padding-bottom: 80px;
}
.menu {
  background: linear-gradient(to bottom, #f7b231 0%,#f7782e 35%,#f7782e 75%,#f7b231 100%);
  border-top: 2px solid currentColor;/* 부모에 있는 컬러값을 상속받아 쓰고싶을 때 키워드값을 활용하면 편하게 활용 가능.*/
  margin: 10px 0 0 0;
  list-style: none;
  height: 47px;
  border-radius: 0 0 5px 5px;
  padding-left: 225px;
}
.menu-item {
  position: relative;
  float: left;
}
.menu-button {
  cursor: pointer;
  font-size: 1.6rem;
  color: #fff;
  font-weight: 700;
  background: transparent;
  line-height: 45px;
  padding: 0;
  border: none;
  border-left: 2px solid rgba(255, 255, 255, 0.5);
  padding: 0 20px;
  text-shadow: 1px 1px 0 #000, -1px -1px 0 #000;/*이 속성을 이용해 텍스트에 윤곽을 줌.*/
  text-shadow: 1px 0 0 #000, 0 1px 0 #000, -1px 0 0 #000, 0 -1px 0 #000;/*이 속성을 이용해 텍스트에 윤곽을 줌.*/
}
.menu-act .menu-button{
  color: #ff0;

}
.menu-act .menu-button::after {
  content: "";
  display: block; /*d:b이 되면 가상요소의 크기는 해당 요소의 크기와 같아짐.*/
  border-top: 2px solid #000;
}
.sub-menu {
  margin: 0;/*<ul> 기본 마진값이 있으므로 초기화시켜줌*/
  padding-left: 0;
  list-style: none;
  display: none;
  position: absolute;
  top: 47px;
  left: 0;
  white-space: nowrap; 
  /* 자식li에 position:absolute설정 했을 시 자식의 가용범위는 p:r준 부모의 영역만큼이됨. 정렬시킬 li는 inline-block으로 정렬했기때문에 블록 성격을 갖고 있는데, 블록은 요소가 가용 범위를 벗어나면 밑으로 떨어지고 인라인은 가용범위를 벗어나면 벗어나는 부분이 잘려서 밑으로 떨어지게 됨. 현재 블록성격을 갖고 인라인방식으로 정렬되는 inline-block이 설정되어있기 떄문에 가용범위를 벗어나면 밑으로 떨어지게 됨. 이것을 해결하는 방법으로 white-space:nowrap;속성을 추가하면 요소가 가용범위를 벗어나도 밑으로 떨어지지 않고 가용범위를 벗어나더라도 wrap하지 않고 한줄로 정렬시켜줌.*/
}
.sub-menu li, .sub-menu a {
  display: inline-block;
}
.sub-menu a {
  padding: 8px 0;
  margin-right: 10px;
}
.sub-menu a::before {
  content: "\f192";
  font-family: 'fontello'; 
  display: inline-block;
  text-decoration: inherit;
  width: 1em;
  margin-right: .2em;
}
.sub-menu a:hover::before,
.sub-menu a:focus::before { /*탭키로 포커스 받았을 때도 체크아이콘으로 바뀌지만 문제는 포커스 된 상태에서 다른 요소에 마우스 호버하면 호버된 부분도 같이 체크아이콘으로 바뀌는 문제가 생김. 이부분은 JS에서 다뤄야함. 타협.*/
  content: "\e800";
}
.menu-act .sub-menu {
  display: block;
}
.sub-menu1, .sub-menu2, .sub-menu3 {
  left: 0;
}
.sub-menu4, .sub-menu5, .sub-menu6 {
  /* left: initial; 값을 초기값으로 돌려줌.*/
  right: 0;
}
/* 텍스트 및 배경 애니메이션 - 비주얼 */
@keyframes bgAni {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0;
  }
}
@keyframes textAni {
  /* from {} 애니메이션 시작 프레임 키워드
  to {} 끝나는 프레임 */
  0% {
    font-size: 12px;
    color: rgba(0,0,0,0);
    /*margin-top: 0;
    margin-left: 0; 부모와 마진 병합이 일어날 수 있고 reflow현상을 발생시키기 때문에 좋지 않은 방법. */
    /*padding-top: 0;
      padding-left: 0;해당 요소의 배경색이 있을 경우 이만큼 색이 칠해지기때문에 배경색이 투명한 경우에 사용.
    */
    /*top: 0; 
    left: 0; position찍고 offset 조정하는게 제일 베스트지만 성능문제로 translate으로 이동시켜주는것이 좋음*/
    transform: translate(0, 0);
  }
  100% {
    font-size: 24px;
    color: rgba(0,0,0,1);
    /*margin-top: 75px;
    margin-left: 400px;부모와 마진 병합이 일어날 수 있음. reflow현상이 일어나기 때문에 성능이 떨어지는 문제가 있음.*/
    /*padding-top: 75px;
      padding-left: 400px;해당 요소의 배경색이 있을 경우 이만큼 색이 칠해지기때문에 배경색이 투명한 경우에 사용.*/
    /*top: 75px;
    left: 400px;*/
    transform: translate(400px, 75px);
  }
}
.visual {
  height: 120px;
  /*border-top: 1px solid transparent;  부모에 보더를 넣어 막을 생성해 자식과 부모의 마진병합을 막는 방법으로 쓰이기도 함. 이경우 boxsizing을 borderbox롤 설정해야 높이에 영향을 안받음*/
  position: relative;
}
.visual::before, .visual::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-repeat: no-repeat;
  /* animation-name: bgAni; 필수 속성
  animation-duration: 2000ms; 필수 속성. 애니되는 시간
  animation-iteration-count: infinite;
  animation-direction: alternate; 프레임 방향을 정해줌. alternate는 왕복.*/
  animation: bgAni 2000ms alternate infinite ease-in-out;/* 단축속성. 필수 속성들을 먼저 작성해야함(duration). delay는 필수가 아니기 때문에 duration 다음에 시간을 넣어줘야 함.*/
}
.visual::before {/* multi animation을 배경에 깔아 쓰고 싶을 때 가상요소를 만들어 사용*/
  background-image: url(./images/ani_flower_01.png), url(./images/ani_flower_02.png);
  background-position: 0 -10px, 640px 0;
  
}
.visual::after {
  /*animation 속성은 요소를 컨트롤 하고 bg를 컨트롤 할 수 없음. multi animation을 배경에 깔아 쓰고 싶을 때 가상 요소를 만들어 사용. before와 after는 한 번만 만들어 사용할 수 있고 JS로 컨트롤 할 수 없음. */
  background-image: url(./images/ani_flower_03.png), url(./images/ani_flower_04.png);
  background-position: 300px 0, 800px 0;
  animation-delay: 1000ms;
}
.visual-text {
  margin: 0; /* <p> 기본 마진값이 있기 때문에 초기화시켜줌. */
  font-family: Georgia, 'Times New Roman', Times, serif;
  animation-name: textAni;
  animation-duration: 3000ms;
  animation-fill-mode: forwards;/*애니는 다 실행이 되면 0%로 돌아옴. 100%의 상태로 멈추게 하고 싶으면 fill-mode 속성을 forwards로 추가*/
  /* position: absolute; */
  width: 500px;
}
/* 모던 브라우저 정렬 방법 display:flex; */
/* .main {
  background: skyblue;
  display: flex;
  flex-flow: row nowrap;
  justify-content: space-evenly; 시작과 끝안에서 요소의 양 옆이 동일한 여백을 갖도록 함. IE 11이하는 지원하지 않음.
  justify-content: space-between; 
  align-items: center;
  padding: 30px;
} */
.main {
  background: #fff;
  padding: 30px 15px;
  overflow: hidden; /* float해제방법2 - 자식의 부유로 인해 부모가 자식높이를 잃어버려 높이를 가지지 못할 때 사용. 자식요소의 사이즈를 읽어들이면서 자연스레 높이가 잡히게 됨(BFC). 이 때 부모 요소에 height가 들어가있으면 안됨. */
  min-height: 450px; /* 최저 높이를 설정해 요소의 높이가 min-height값보다 작아지는 것을 방지. */
}
/* float해제방법3 - 정렬시킬 요소의 부모에 클래스를 주어 해제 */
/* .clearfix::after {
  content: "";
  display: block;
  clear: both; display가 블록일때만 쓸 수 있으므로 display: block;을 같이 설정해줌.
} */
/* float해제방법1 - 플롯 요소의 마지막 형제요소로 html에 빈 박스를 추가하고 .clearfix를 설정해 클래스 추가 */
/* .clearfix {
  content: "";
  display: block;
  clear: both; display가 블록일때만 쓸 수 있으므로 display: block;을 같이 설정해줌.
} */
.group {
  float: left;
  margin: 0 15px;
}
.group1{
  width: 250px;
}
/* 로그인 */
.login {
  background: radial-gradient(circle at right top, #efa22f, #ed702d);
  border-radius: 5px;
  box-shadow: 5px 5px 0 0 #ccc;
  padding: 15px 10px;  
}
.login-heading {
  margin: 0;/*<h2>는 기본 마진값이 설정 되어 있으므로 초기화 시킴. */
  color: #ff0;
  font-size: 1.6rem;
  font-weight: 700;
  text-indent: 10px;

  
}
.login-form {
  margin-top: 10px;
  padding: 10px 10px 0 10px;
  background: #fff;
  border-radius: 5px 5px 0 0;
}
.login-form fieldset {
  border: 0;
  border-bottom: 1px solid #ccc;
  padding: 0;
  padding-bottom: 5px;
  margin: 0;
  position: relative;
}
.user-email, .user-pw {
  margin-bottom: 5px;
}
.user-email *, .user-pw * {
  vertical-align: middle;
}
.login-form label {
  width: 4em;/* 글자 갯 수만큼 공간을 만들어 주거나 사이즈를 정하고 싶을 때 사용하면 유용. */
  display: inline-block;
}
.login-form input {
  width: 90px;
  height: 22px; /* 크로스브라우징 하려면 input태그는 브라우저별로 크기가 다르기 때문에 width, height를 지정해 주어야 한다. input 태그는 inline block이기 때문에 디스플레이를 바꿀 필요가 없음. */
  border: 1px solid #ccc;
  padding: 1px 1px 1px 0.5em;
}
.btn-login {/*button 은 inline block*/
  position: absolute;
  top: 0;
  right: 0;
  width: 50px;
  height: 50px;
  padding: 0 5px;
  border: 0;
  border-radius: 3px;
  background:  #ed702d;
  color: #fff;
}
.login-member {
  background: #fff;
  padding: 2px 10px;
  margin: 0;
  list-style: none;
  border-radius: 0 0 5px 5px;
  display: flex;
  flex-flow: row nowrap;
  justify-content: space-between;
  /* white-space: nowrap; 개행을 금지시키면서 */
  letter-spacing: -1px;/*자간을 조정*/
}
.login-member li {
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
}
.login-member .icon-right-open {
  color: #ed702d;
}
.login-member a {
  display: block;
  padding: 8px 0;
}

/* 유효성 검사 배너 */
.validation-list {
  margin: 25px 0 0 0;
  list-style: none;
  padding-left: 0;
}
.validation-list a:hover, a:focus {
  color: red;
}
.validation-list a {
  display: block;
  border-radius: 20px;
  border: 1px solid #aaa;
  background: #fff;
  background: url(./images/validation_icon.png) 25px 50% / 20px 20px no-repeat, linear-gradient(to bottom, #eee, #ccc);
  /* bg로 이미지를 깔면 SEO 검색 최적화 되지 않음. 접근성에서 배제시키는 요소. 해서 아이콘 같은 부가적으로 꾸며주는 것들은 bg로 넣어주면 되지만 이미지는 img태그를 넣어 삽입해 주어야 검색화 최적화, 스크린리더 사용 가능 등 접근성이 높아진다.*/
  /* bg position 단위를 퍼센트로 주면 이미지의 해당 위치를 배경의 해당 위치를 기준으로 배치함*/
  padding: 10px 10px 10px 50px;
  margin-top: 10px;
}

/* 웹 관련 용어 */
.term {
  background: linear-gradient(#ccc, #eee);
  border: 1px solid #aaa;
  padding: 15px;  
  margin-top: 20px;
  border-radius: 5px;
}
.term-heading {
  margin-top: 0;
  margin-bottom: 0;
  /*<h2>에 agent값으로 margin-top/bottom이 들어있기 때문에 0으로 초기화 시켜줌. 재정의 안해도 될 속성을 재정의하는 것은 성능면에서 좋지 않기 때문에 필요한 속성만 초기화 시켜 사용하는 것이 좋음.*/
  font-size: 1.6rem;
  font-weight: 700;
  /*이미 볼드값이 있지만 heading level을 다른 걸로 바꿀 수 있으므로 font-weight을 따로 설정해줌*/
}
.term-list {
  margin: 15px 0 0 0;
  /*<dl> agent값으로 margin-top/bottm값이 설정되어 있기 때문에 0으로 초기화 시켜줌*/
  background: yellow;
}
/* flex박스 이용해 배치 */
/* .term-list>div {
  display: flex;
  flex-flow: column wrap;
  justify-content: space-between;
  height: 70px;
  width: 218px;
}
.term-list dd {
  margin-left: 0;
}
.term-list-subject,
.term-list-brief {
  width: 145px;
}
.term-list-subject {
  color: #296897;
}
.term-list-thumbnail {
  order: -1;
}
.term-list>div:nth-child(even) {
  margin-top: 15px;
}
.term-list>div:nth-child(even) .term-list-thumbnail {
  order: 3;
}
*/
/* float을 이용해 배치*/
.term-list > div {
  overflow: hidden;
  background: skyblue;
}
.term-list > div:nth-child(even) {
  margin-top: 15px;
}
.term-list-subject,
.term-list-brief {
  color: #296897;
  background: pink;
  float: right;
  width: 145px;
}
.term-list-thumbnail {
  float: left;
  background: lime;
}
.term-list-thumbnail img {
  display: block;
}
.term-list-brief {
  background: orange;
  margin-top: 5px;
  line-height: 1.5;
}
.term-list dd {
  margin-left: 0;
  /*<dd> agent값으로 margin-left값이 들어있기 때문에 0으로 초기화시켜줌.*/
}
.term-list > div:nth-child(even) .term-list-subject,
.term-list > div:nth-child(even) .term-list-brief {
  float: left;
}
.term-list > div:nth-child(even) .term-list-thumbnail {
  float: right;
}


/* 그룹2 */
.group2{
  width: 380px;
}

/* 검색 폼 */
.search-form {
  background: #ccc linear-gradient(#ccc, #eee);/*gradient를 지원하지 못할 경우 앞의 fallback(대비책)할 컬러값이 나오게됨. 앞은 배경색상, 뒤는 배경이미지. 배경색상을 칠하고 그 위에 배경이미지를 덧바르는 원리. */
  border: 1px solid #aaa;
  border-bottom-color: transparent;/*보더는 그대로 두고 색상만 티 안나게 변경.*/
  border-radius: 15px 15px 0 0;
  padding: 15px 25px 10px;
}
.search-form fieldset {
  margin: 0;
  padding: 0;
  border: 0;
}
.search-form-container {
  display: flex;
  flex-flow: row nowrap;
  justify-content: space-between;
  align-items: center;
  }
.search-form input[name="search"] {/*class없으면 name속성을 선택해 사용.*/
  border: 1px solid #aaa;
  border-radius: 3px;
  padding: 1px 1px 1px 0.5em;
  height: 22px;
  /*flex-grow: 1;를 주어 search창을 늘릴 수 있는데 이 때는 margin으로 양 사이 간격을 띄워줌. 하지만 flex-flow는 firefox에서 문제 야기시킴
  margin: 0 5px; */
  width: 190px;
}
.search-form .btn-search {
  background: #333;
  border: 1px solid #aaa;
  color: #fff;
  border-radius: 3px;
  height: 22px;
  padding: 0 10px;
}



.group3{
  width: 190px;
  background: ;
}
.slogan {
  background: orange;
}
.footer {
  background: pink;
  width: 100%;
}